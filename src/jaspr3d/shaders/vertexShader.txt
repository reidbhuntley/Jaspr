#version 400 core

in vec3 position;
in vec2 textureCoords;
in vec3 normal;

out vec2 pass_textureCoords;
out vec3 surfaceNormal;
out vec3 toLightVector;
out vec3 toCameraVector;

uniform mat4 modelMatrix;
uniform mat4 mvpMatrix;
uniform vec3 lightPosition;
uniform vec3 cameraPosition;

void main(void){

	vec4 position4 = vec4(position.xyz,1.0);
	vec4 worldPosition = modelMatrix * position4;
	gl_Position = mvpMatrix * position4;
	pass_textureCoords = textureCoords;
	
	if(normal == vec3(0.0,0.0,0.0)){
		surfaceNormal = vec3(0.0,0.0,0.0);
		toLightVector = vec3(0.0,0.0,0.0);
		toCameraVector = vec3(0.0,0.0,0.0);
		return;
	}
	
	surfaceNormal = (modelMatrix * vec4(normal,0.0)).xyz;
	toLightVector = lightPosition.xyz - worldPosition.xyz;
	toCameraVector = cameraPosition.xyz - worldPosition.xyz;

}